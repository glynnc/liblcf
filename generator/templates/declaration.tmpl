@header1
#ifndef LCF_RPG_%(structupper)s_H
#define LCF_RPG_%(structupper)s_H
@header2

// Headers
@header_tmpl
#include %(header)s
@header3

/**
 * RPG::%(structname)s class.
 */
namespace RPG {
	class %(structname)s {
	public:
@enum_header
		enum %(ename)s {
@enum_tmpl
			%(ename)s_%(name)s = %(num)d%(comma)s
@enum_footer
		};
@enum2_header
		struct %(ename)s {
			enum Index {
@enum2_tmpl
				%(name)s = %(num)d%(comma)s
@enum2_footer
			};
		};
@names_tmpl
		static const char * const %(ename)s_to_string[];
@names2_tmpl
		static const std::map<int,const char *> %(ename)s_to_string;
@names3_tmpl
		static const std::map<const char *,int,string_less> %(ename)s_from_string;
@ctor
		%(structname)s();
@tmpl
		%(ftype)s %(fname)s;
@footer
	};
}

#endif
